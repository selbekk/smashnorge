{
  "name": "gulp-connect-php",
  "version": "0.0.5",
  "description": "Starts a php server",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/micahblu/gulp-connect-php"
  },
  "keywords": [
    "gulp",
    "php",
    "server",
    "connect"
  ],
  "author": {
    "name": "micahblu"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/micahblu/gulp-php/issues"
  },
  "dependencies": {
    "bin-version-check": "^2.1.0",
    "opn": "^1.0.0"
  },
  "devDependencies": {
    "mocha": "^2.1.0",
    "supertest": "^0.15.0"
  },
  "readme": "# gulp-connect-php\n\n> Start a [PHP-server](http://php.net/manual/en/features.commandline.webserver.php)\n\nThis is pretty much a gulp version of [@sindresorhus's](https://github.com/sindresorhus) [grunt-php] (https://github.com/sindresorhus/grunt-php) and acts as a _basic version_ drop-in replacement for [gulp-connect](https://www.npmjs.com/package/gulp-connect), though please note not all features from gulp-connect are supported with gulp-connect-php. I am open to supporting other features and pull requests that implement them.\n\nUses the built-in server in PHP 5.4.0+.\n\n## Install\n\n```sh\n$ npm install --save-dev gulp-connect-php\n```\n\n## Usage\n\n```js\nvar gulp = require('gulp'),\n    connect = require('gulp-connect-php');\n\ngulp.task('connect', function() {\n\tconnect.server();\n});\n\ngulp.task('default', ['connect']);\n```\n\n## Examples\n\n#### Use it with Browser Sync\n\n```js\nvar gulp = require('gulp'),\n    connect = require('gulp-connect-php'),\n    browserSync = require('browser-sync');\n\ngulp.task('connect-sync', function() {\n  connect.server({}, function (){\n    browserSync({\n      proxy: 'localhost:8000'\n    });\n  });\n\n  gulp.watch('**/*.php').on('change', function () {\n    browserSync.reload();\n  });\n});\n```\n\n## Options\n\n### port\n\nType: `number`  \nDefault: `8000`\n\nThe port on which you want to access the webserver. Task will fail if the port is already in use.\n\n### hostname\n\nType: `string`  \nDefault: `'127.0.0.1'` *(usually same as `localhost`)*\n\nThe hostname the webserver will use.\n\nUse `0.0.0.0` if you want it to be accessible from the outside.\n\n### base\n\nType: `string`  \nDefault: `'.'`\n\nFrom which folder the webserver will be served. Defaults to the directory of the gulpfile.\n\n### keepalive\n\nType: `boolean`  \nDefault: `true`\n\nKeep the server alive indefinitely.\n\n### open\n\nType: `boolean`  \nDefault: `false`\n\nOpen the server in the browser when the task is triggered.\n\n### router\n\nType: `string`  \n\nOptionally specify the path to a [router script](http://php.net/manual/en/features.commandline.webserver.php#example-380) that is run at the start of each HTTP request. If this script returns `false`, then the requested resource is returned as-is. Otherwise the script's output is returned to the browser.\n\nExample router script:\n\n```php\n<?php\n// router.php\nif (preg_match('/\\.(?:png|jpg|jpeg|gif)$/', $_SERVER[\"REQUEST_URI\"])) {\n\treturn false;    // serve the requested resource as-is\n} else {\n\techo \"<p>Thanks for using gulp-connect-php :)</p>\";\n}\n?>\n```\n\n### bin\n\nType: `string`  \nDefault: `'php'`\n\nPath to the PHP binary. Useful if you have multiple versions of PHP installed.\n\n### ini\n\nType: `string`  \nDefault: Built-in `php.ini`\n\nPath to a custom [`php.ini`](http://php.net/manual/en/ini.php) config file.\n\n## License\n\nMIT Â© [Micah Blu](http://micahblu.com)\n",
  "readmeFilename": "README.md",
  "_id": "gulp-connect-php@0.0.5",
  "_from": "gulp-connect-php@0.0.5"
}
