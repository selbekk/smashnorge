{
  "name": "gulp-server-livereload",
  "version": "1.2.1",
  "description": "Gulp plugin to run a local webserver with livereload enabled via socket.io",
  "main": "src/index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hiddentao/gulp-server-livereload.git"
  },
  "keywords": [
    "gulpplugin",
    "webserver",
    "connect",
    "livereload",
    "socket",
    "websocket"
  ],
  "author": {
    "name": "Ramesh Nair",
    "email": "ram@hiddentao.com",
    "url": "http://hiddentao.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/hiddentao/gulp-server-livereload/issues"
  },
  "homepage": "https://github.com/hiddentao/gulp-server-livereload",
  "devDependencies": {
    "mocha": "~1.20.1",
    "supertest": "~0.13.0"
  },
  "dependencies": {
    "connect": "~3.1.1",
    "connect-inject": "~0.3.2",
    "gulp-util": "~2.2.19",
    "node-watch": "~0.3.4",
    "node.extend": "~1.0.10",
    "open": "~0.0.5",
    "serve-index": "~1.1.4",
    "serve-static": "~1.5.2",
    "socket.io": "~1.0.6",
    "through2": "~0.5.1"
  },
  "readme": "gulp-server-livereload [![Build Status](http://img.shields.io/travis/hiddentao/gulp-server-livereload.svg?style=flat)](https://travis-ci.org/hiddentao/gulp-server-livereload)\n==============\n\n> Gulp plugin to run a local webserver with live reload using socket.io\n\n**This is a fork of [gulp-webserver](https://github.com/schickling/gulp-webserver)**. This version uses [socket.io](http://socket.io) instead of [tiny-lr](https://github.com/mklabs/tiny-lr) so that the livereload mechanism works even if your browser does not support WebSockets (PhoneGap developers rejoice!).\n\nIt can also capture `window.console` output from the client-side and transmit it \nto the back-end for display. This is useful for when testing from Phonegap, etc.\n\n## Installation\n\n```sh\n$ npm install --save-dev gulp-server-livereload\n```\n\n## Usage\n\nThe folder supplied to `gulp.src()` will be the root folder from which files will be served.\n\n```js\nvar gulp = require('gulp');\nvar server = require('gulp-server-livereload');\n\ngulp.task('webserver', function() {\n  gulp.src('app')\n    .pipe(server({\n      livereload: true,\n      directoryListing: true,\n      open: true\n    }));\n});\n```\n\nIf you run `gulp webserver` your browser should automatically open up to `http://localhost:8000` and show a directory listing of the `app` folder.\n\n\n## Options\n\nKey | Type | Default | Description |\n--- | --- | --- | --- |\n`host` | String | `localhost` | hostname of the webserver\n`port` | Number | `8000` | port of the webserver\n`livereload` | Boolean/Object | `false` | whether to use livereload. For advanced options, provide an object. You can use the `port` property to set a custom live reload port (default is `35729`).\n`directoryListing` | Boolean/Object | `false` | whether to display a directory listing. For advanced options, provide an object. You can use the `path property to set a custom path or the `options` property to set custom [serve-index](https://github.com/expressjs/serve-index) options.\n`defaultFile` | String | `index.html` | default file to show when root URL is requested. If `directoryListing` is enabled then this gets disabled.\n`open` | Boolean/Object | `false` | open the localhost server in the browser\n`https` | Boolean/Object | `false` | whether to use https or not. By default, `gulp-webserver` provides you with a development certificate but you remain free to specify a path for your key and certificate by providing an object like this one: `{key: 'path/to/key.pem', cert: 'path/to/cert.pem'}`.\n`log` | String | `info` | If set to `debug` you will see all requests logged to the console.\n`clientConsole` | Boolean | `false` | whether to capture `window.console` output from the client and send it to the back-end for display.\n\n\n## FAQ\n\n#### Why can't I reach the server from the network?\n\nSet `0.0.0.0` as the `host` option.\n\n#### How can I set main.html to automatically load when I visit the URL?\n\nSet the `defaultFile` to `main.html`:\n\n```js\ngulp.task('webserver', function() {\n  gulp.src('app')\n    .pipe(server({\n      defaultFile: 'main.html'\n    }));\n});\n```\n\n## License\n\nMIT - see LICENSE.md\n\n\n\n\n\n\n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "_id": "gulp-server-livereload@1.2.1",
  "_from": "gulp-server-livereload@^1.0.2"
}
